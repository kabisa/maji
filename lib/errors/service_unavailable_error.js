// Generated by CoffeeScript 1.9.3
(function() {
  var RecoverableError, SERVICE_UNAVAILABLE, ServiceUnavailableError,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  RecoverableError = require('./base_error').RecoverableError;

  SERVICE_UNAVAILABLE = 'Service Unavailable Error';

  ServiceUnavailableError = (function(superClass) {
    extend(ServiceUnavailableError, superClass);

    function ServiceUnavailableError(message, cause) {
      ServiceUnavailableError.__super__.constructor.call(this, message || SERVICE_UNAVAILABLE, cause);
    }

    return ServiceUnavailableError;

  })(RecoverableError);

  module.exports = ServiceUnavailableError;

}).call(this);
