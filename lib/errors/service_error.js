// Generated by CoffeeScript 1.9.3
(function() {
  var SERVICE_ERROR, ServiceError, UnrecoverableError,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  UnrecoverableError = require('./base_error').UnrecoverableError;

  SERVICE_ERROR = 'Unexpected error occurred';

  ServiceError = (function(superClass) {
    extend(ServiceError, superClass);

    function ServiceError(message, cause) {
      ServiceError.__super__.constructor.call(this, message || SERVICE_ERROR, cause);
    }

    return ServiceError;

  })(UnrecoverableError);

  module.exports = ServiceError;

}).call(this);
